# Generated by Django 3.1.6 on 2021-05-28 12:43

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import fracas.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Asset',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('asset_config_id', models.CharField(max_length=50, unique=True)),
                ('asset_serial_number', models.CharField(max_length=20)),
                ('location_id', models.TextField()),
                ('location_description', models.TextField()),
                ('asset_type', models.CharField(max_length=20, null=True)),
                ('software_version', models.CharField(max_length=15)),
                ('asset_description', models.TextField()),
                ('software_description', models.TextField()),
                ('asset_status', models.CharField(max_length=15)),
            ],
            options={
                'verbose_name_plural': 'Asset Register',
            },
        ),
        migrations.CreateModel(
            name='Defect',
            fields=[
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('asset_type', models.CharField(blank=True, max_length=550)),
                ('defect_id', models.AutoField(primary_key=True, serialize=False)),
                ('defect_description', models.TextField(blank=True)),
                ('defect_open_date', models.DateField(blank=True, null=True)),
                ('defect_closed_date', models.DateField(blank=True, null=True)),
                ('investigation', models.TextField(blank=True)),
                ('defect_status', models.CharField(blank=True, max_length=15)),
                ('defect_status_remarks', models.TextField(blank=True)),
                ('oem_defect_reference', models.TextField(blank=True)),
                ('oem_target_date', models.DateField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': '(4) FRACAS Defect Identification',
            },
        ),
        migrations.CreateModel(
            name='EmployeeMaster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employee_id', models.CharField(blank=True, max_length=15, null=True)),
                ('name', models.CharField(blank=True, max_length=100)),
                ('designation', models.CharField(blank=True, max_length=100)),
            ],
            options={
                'verbose_name_plural': 'Employee Master',
            },
        ),
        migrations.CreateModel(
            name='FailureMode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mode_id', models.CharField(max_length=15, unique=True)),
                ('mode_description', models.CharField(blank=True, max_length=100, null=True)),
                ('asset_type', models.CharField(blank=True, max_length=550)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Failure Mode Identification',
            },
        ),
        migrations.CreateModel(
            name='PBSMaster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('system', models.CharField(blank=True, max_length=100)),
                ('subsystem', models.CharField(blank=True, max_length=100)),
                ('product_id', models.CharField(blank=True, max_length=15)),
                ('product_description', models.CharField(blank=True, max_length=100)),
                ('asset_type', models.CharField(blank=True, max_length=550)),
                ('asset_description', models.CharField(blank=True, max_length=550)),
                ('MTBF', models.FloatField(default=0)),
                ('MTBSAF', models.FloatField(default=0)),
                ('MART', models.FloatField(default=0)),
                ('asset_quantity', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name_plural': 'PBS Master',
            },
        ),
        migrations.CreateModel(
            name='ReviewBoard',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('asset_type', models.CharField(blank=True, max_length=550)),
                ('from_date', models.DateField(blank=True, null=True)),
                ('to_date', models.DateField(blank=True, null=True)),
                ('meeting_date', models.DateField(auto_now_add=True, null=True)),
                ('meeting_id', models.CharField(blank=True, max_length=15, null=True)),
                ('meeting_status', models.CharField(blank=True, max_length=15)),
                ('meeting_outcome', models.CharField(blank=True, max_length=50)),
            ],
            options={
                'verbose_name_plural': '(6) FRACAS Review',
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserResetKey',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(db_index=True, max_length=255)),
                ('expires_on', models.DateTimeField(blank=True, null=True)),
                ('otp_expires_on', models.DateTimeField(blank=True, null=True)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fracas.userprofile')),
            ],
        ),
        migrations.CreateModel(
            name='RootCause',
            fields=[
                ('root_cause_id', models.AutoField(primary_key=True, serialize=False)),
                ('asset_type', models.CharField(blank=True, max_length=550)),
                ('rca_workshop_date', models.DateField(blank=True, null=True)),
                ('root_cause_status', models.CharField(blank=True, max_length=15)),
                ('immediate_cause', fracas.models.ModelArrowCharField(blank=True, max_length=100)),
                ('leading_reasons', fracas.models.ModelArrowCharField(blank=True, max_length=100)),
                ('root_cause_description', models.CharField(blank=True, max_length=100)),
                ('defect', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='fracas.defect', unique=True)),
            ],
            options={
                'verbose_name_plural': 'Root Cause Analysis',
            },
        ),
        migrations.CreateModel(
            name='FailureData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('asset_type', models.CharField(blank=True, max_length=550)),
                ('failure_id', models.IntegerField(blank=True, null=True, unique=True)),
                ('event_description', models.CharField(max_length=600, null=True)),
                ('mode_description', models.CharField(blank=True, max_length=600, null=True)),
                ('date', models.DateField(null=True)),
                ('time', models.TimeField(max_length=15, null=True)),
                ('detection', models.CharField(max_length=600, null=True)),
                ('service_delay', models.IntegerField(default=0)),
                ('immediate_investigation', models.TextField(blank=True, null=True)),
                ('failure_type', models.CharField(choices=[('safety', 'Safety'), ('hardware', 'Hardware'), ('random', 'Random')], default='safety', max_length=600)),
                ('safety_failure', models.CharField(choices=[('yes', 'Yes'), ('no', 'No')], default='yes', max_length=60)),
                ('hazard_id', models.CharField(blank=True, max_length=60, null=True)),
                ('cm_description', models.TextField(blank=True, null=True)),
                ('replaced_asset_config_id', models.CharField(max_length=500, null=True)),
                ('cm_start_date', models.DateField(blank=True, null=True)),
                ('cm_start_time', models.TimeField(max_length=15, null=True)),
                ('cm_end_date', models.DateField(max_length=15, null=True)),
                ('cm_end_time', models.TimeField(max_length=15, null=True)),
                ('oem_failure_reference', models.TextField(blank=True, null=True)),
                ('asset_config_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='fracas.asset', to_field='asset_config_id')),
                ('defect', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='fracas.defect')),
                ('mode_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='fracas.failuremode')),
            ],
            options={
                'verbose_name_plural': 'Failure data Collection Form',
            },
        ),
        migrations.CreateModel(
            name='DefectDiscussion',
            fields=[
                ('defect_discussion_id', models.AutoField(primary_key=True, serialize=False)),
                ('meeting_date', models.DateField(auto_now_add=True, null=True)),
                ('attendees', models.ManyToManyField(blank=True, to='fracas.EmployeeMaster')),
                ('defect', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='fracas.defect')),
                ('review_board', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fracas.reviewboard')),
            ],
        ),
        migrations.CreateModel(
            name='CorrectiveAction',
            fields=[
                ('corrective_action_id', models.AutoField(primary_key=True, serialize=False)),
                ('corrective_action_owner', models.CharField(blank=True, max_length=550)),
                ('corrective_action_description', models.TextField(blank=True)),
                ('corrective_action_update', models.TextField(blank=True)),
                ('corrective_action_status', models.CharField(blank=True, max_length=15)),
                ('defect', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fracas.defect')),
            ],
        ),
        migrations.CreateModel(
            name='Action',
            fields=[
                ('action_id', models.AutoField(primary_key=True, serialize=False)),
                ('action_description', models.CharField(blank=True, max_length=100)),
                ('action_owner', models.CharField(blank=True, max_length=100)),
                ('action_status', models.CharField(blank=True, max_length=15)),
                ('action_due_date', models.DateField(blank=True, null=True)),
                ('progress_log', models.CharField(blank=True, max_length=100)),
                ('defect_discussion_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='fracas.defectdiscussion')),
            ],
        ),
    ]
